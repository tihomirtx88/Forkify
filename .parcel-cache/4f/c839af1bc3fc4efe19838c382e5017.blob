"use strict";

require("core-js/modules/esnext.array.last-index.js");
require("core-js/modules/esnext.array.last-item.js");
require("core-js/modules/esnext.composite-key.js");
require("core-js/modules/esnext.composite-symbol.js");
require("core-js/modules/esnext.map.delete-all.js");
require("core-js/modules/esnext.map.every.js");
require("core-js/modules/esnext.map.filter.js");
require("core-js/modules/esnext.map.find.js");
require("core-js/modules/esnext.map.find-key.js");
require("core-js/modules/esnext.map.from.js");
require("core-js/modules/esnext.map.group-by.js");
require("core-js/modules/esnext.map.includes.js");
require("core-js/modules/esnext.map.key-by.js");
require("core-js/modules/esnext.map.key-of.js");
require("core-js/modules/esnext.map.map-keys.js");
require("core-js/modules/esnext.map.map-values.js");
require("core-js/modules/esnext.map.merge.js");
require("core-js/modules/esnext.map.of.js");
require("core-js/modules/esnext.map.reduce.js");
require("core-js/modules/esnext.map.some.js");
require("core-js/modules/esnext.map.update.js");
require("core-js/modules/esnext.math.clamp.js");
require("core-js/modules/esnext.math.deg-per-rad.js");
require("core-js/modules/esnext.math.degrees.js");
require("core-js/modules/esnext.math.fscale.js");
require("core-js/modules/esnext.math.iaddh.js");
require("core-js/modules/esnext.math.imulh.js");
require("core-js/modules/esnext.math.isubh.js");
require("core-js/modules/esnext.math.rad-per-deg.js");
require("core-js/modules/esnext.math.radians.js");
require("core-js/modules/esnext.math.scale.js");
require("core-js/modules/esnext.math.seeded-prng.js");
require("core-js/modules/esnext.math.signbit.js");
require("core-js/modules/esnext.math.umulh.js");
require("core-js/modules/esnext.number.from-string.js");
require("core-js/modules/esnext.observable.js");
require("core-js/modules/esnext.promise.try.js");
require("core-js/modules/esnext.reflect.define-metadata.js");
require("core-js/modules/esnext.reflect.delete-metadata.js");
require("core-js/modules/esnext.reflect.get-metadata.js");
require("core-js/modules/esnext.reflect.get-metadata-keys.js");
require("core-js/modules/esnext.reflect.get-own-metadata.js");
require("core-js/modules/esnext.reflect.get-own-metadata-keys.js");
require("core-js/modules/esnext.reflect.has-metadata.js");
require("core-js/modules/esnext.reflect.has-own-metadata.js");
require("core-js/modules/esnext.reflect.metadata.js");
require("core-js/modules/esnext.set.add-all.js");
require("core-js/modules/esnext.set.delete-all.js");
require("core-js/modules/esnext.set.difference.js");
require("core-js/modules/esnext.set.every.js");
require("core-js/modules/esnext.set.filter.js");
require("core-js/modules/esnext.set.find.js");
require("core-js/modules/esnext.set.from.js");
require("core-js/modules/esnext.set.intersection.js");
require("core-js/modules/esnext.set.is-disjoint-from.js");
require("core-js/modules/esnext.set.is-subset-of.js");
require("core-js/modules/esnext.set.is-superset-of.js");
require("core-js/modules/esnext.set.join.js");
require("core-js/modules/esnext.set.map.js");
require("core-js/modules/esnext.set.of.js");
require("core-js/modules/esnext.set.reduce.js");
require("core-js/modules/esnext.set.some.js");
require("core-js/modules/esnext.set.symmetric-difference.js");
require("core-js/modules/esnext.set.union.js");
require("core-js/modules/esnext.string.at.js");
require("core-js/modules/esnext.string.code-points.js");
require("core-js/modules/esnext.symbol.dispose.js");
require("core-js/modules/esnext.symbol.observable.js");
require("core-js/modules/esnext.symbol.pattern-match.js");
require("core-js/modules/esnext.weak-map.delete-all.js");
require("core-js/modules/esnext.weak-map.from.js");
require("core-js/modules/esnext.weak-map.of.js");
require("core-js/modules/esnext.weak-set.add-all.js");
require("core-js/modules/esnext.weak-set.delete-all.js");
require("core-js/modules/esnext.weak-set.from.js");
require("core-js/modules/esnext.weak-set.of.js");
require("core-js/modules/web.immediate.js");
var _icons = _interopRequireDefault(require("url:../img/icons.svg"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const {
  async
} = require("regenerator-runtime");
//Parse 2

const recipeContainer = document.querySelector('.recipe');
const timeout = function (s) {
  return new Promise(function (response, reject) {
    setTimeout(function () {
      reject(new Error(`Request took too long! Timeout after ${s} second`));
    }, s * 1000);
  });
};

// https://forkify-api.herokuapp.com/v2

///////////////////////////////////////

const renderSpinner = function (parentEl) {
  const markup = `
    <div class="spinner">
      <svg>
        <use href="${_icons.default}#icon-loader"></use>
      </svg>
    </div> 
  `;
  parentEl.innerHTML = '';
  parentEl.insertAdjacentHTML('afterbegin', markup);
};
const showRecipe = async function () {
  try {
    // 1 Loading recipe
    renderSpinner(recipeContainer);
    const res = await fetch("https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886");
    const data = await res.json();
    if (!res.ok) throw new Error(`${data.message} (${res.status})`);
    let {
      recipe
    } = data.data;
    recipe = {
      id: recipe.id,
      title: recipe.title,
      publisher: recipe.publisher,
      sourceUrl: recipe.source_url,
      image: recipe.image_url,
      servings: recipe.servings,
      cookingTime: recipe.cooking_time,
      ingredients: recipe.ingredients
    };
    //  2 Render recipe
    const markup = `
        <figure class="recipe__fig">
        <img src="${recipe.image}" alt="${recipe.timeout}" class="recipe__img" />
        <h1 class="recipe__title">
          <span>${recipe.title}</span>
        </h1>
      </figure>

      <div class="recipe__details">
        <div class="recipe__info">
          <svg class="recipe__info-icon">
            <use href="${_icons.default}#icon-clock"></use>
          </svg>
          <span class="recipe__info-data recipe__info-data--minutes">${recipe.cookingTime}</span>
          <span class="recipe__info-text">minutes</span>
        </div>
        <div class="recipe__info">
          <svg class="recipe__info-icon">
            <use href="${_icons.default}#icon-users"></use>
          </svg>
          <span class="recipe__info-data recipe__info-data--people">${recipe.servings}</span>
          <span class="recipe__info-text">servings</span>

          <div class="recipe__info-buttons">
            <button class="btn--tiny btn--increase-servings">
              <svg>
                <use href="${_icons.default}#icon-minus-circle"></use>
              </svg>
            </button>
            <button class="btn--tiny btn--increase-servings">
              <svg>
                <use href="${_icons.default}#icon-plus-circle"></use>
              </svg>
            </button>
          </div>
        </div>

        <div class="recipe__user-generated">
          <svg>
            <use href="${_icons.default}#icon-user"></use>
          </svg>
        </div>
        <button class="btn--round">
          <svg class="">
            <use href="${_icons.default}#icon-bookmark-fill"></use>
          </svg>
        </button>
      </div>

      <div class="recipe__ingredients">
        <h2 class="heading--2">Recipe ingredients</h2>
        <ul class="recipe__ingredient-list">
        ${recipe.ingredients.map(ing => {
      return `
              <li class="recipe__ingredient">
                <svg class="recipe__icon">
                  <use href="${_icons.default}#icon-check"></use>
                </svg>
                <div class="recipe__quantity">${ing.quantity}</div>
                <div class="recipe__description">
                  <span class="recipe__unit">${ing.unit}</span>
                  ${ing.description}
                </div>
              </li>
          `;
    }).join('')}
        </ul>
      </div>

      <div class="recipe__directions">
        <h2 class="heading--2">How to cook it</h2>
        <p class="recipe__directions-text">
          This recipe was carefully designed and tested by
          <span class="recipe__publisher">${recipe.publisher}</span>. Please check out
          directions at their website.
        </p>
        <a
          class="btn--small recipe__btn"
          href="${recipe.sourceUrl}"
          target="_blank"
        >
          <span>Directions</span>
          <svg class="search__icon">
            <use href="${_icons.default}#icon-arrow-right"></use>
          </svg>
        </a>
      </div>
  `;
    recipeContainer.innerHTML = "";
    recipeContainer.insertAdjacentHTML('afterbegin', markup);
  } catch (err) {
    console.log(err);
  }
};
showRecipe();