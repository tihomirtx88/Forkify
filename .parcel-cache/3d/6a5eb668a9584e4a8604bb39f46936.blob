"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));
var _View = _interopRequireDefault(require("./View"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//Parse 2

class PaginationView extends _View.default {
  _parentElement = document.querySelector('.pagination');

  // Publisher -Subscriber
  addHandlerClick() {}
  _generateMarkuo() {
    const currentPage = this._data.page;
    // Example: 70 results / 10 pages
    const numPages = Math.ceil(this._data.results.length / this._data.resultPerPage);
    // Page 1 and there are other pages
    if (currentPage === 1 && numPages > 1) {
      return `
            <button class="btn--inline pagination__btn--next">
                <span>Page ${currentPage + 1}</span>
                <svg class="search__icon">
                <use href="${_icons.default}#icon-arrow-right"></use>
                </svg>
            </button>
            `;
    }
    // Last page
    if (currentPage === numPages && numPages > 1) {
      return `
            <button class="btn--inline pagination__btn--prev">
                <svg class="search__icon">
                <use href="${_icons.default}#icon-arrow-left"></use>
                </svg>
                <span>Page ${currentPage - 1}</span>
            </button>
            `;
    }
    // Other page
    if (currentPage < numPages) {
      return `
            <button class="btn--inline pagination__btn--prev">
                <svg class="search__icon">
                <use href="${_icons.default}#icon-arrow-left"></use>
                </svg>
                <span>Page ${currentPage - 1}</span>
            </button>
            <button class="btn--inline pagination__btn--next">
                <span>Page ${currentPage + 1}</span>
                <svg class="search__icon">
                <use href="${_icons.default}#icon-arrow-right"></use>
                </svg>
            </button>
            `;
    }

    // Page 1 and there are not other pages
    return '';
  }
}
var _default = exports.default = new PaginationView();